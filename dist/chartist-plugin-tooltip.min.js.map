{"version":3,"sources":["chartist-plugin-tooltip.js"],"names":["root","factory","define","amd","Chartist","returnExportsGlobal","exports","module","require","this","window","document","show","element","hasClass","className","hide","remove","getAttribute","indexOf","defaultOptions","class","undefined","pointClass","plugins","tooltip","options","extend","chart","on","event","callback","$chart","addEventListener","e","renderTooltip","text","$toolTip","createElement","insertBefore","container","childNodes","height","offsetHeight","width","offsetWidth","setPosition","offsetX","offsetY","box","getBoundingClientRect","left","pageX","top","pageY","style","$point","target","tooltipText","isPieChart","Pie","parentNode","seriesName","meta","value","hasMetaValue","Number","transformTooltipTextFnc","tooltipFnc","innerHTML"],"mappings":";;;;;;CAAC,SAAUA,EAAMC,GACO,kBAAXC,SAAyBA,OAAOC,IAEzCD,QAAQ,qBAAsB,SAAUE,GACtC,MAAQJ,GAAKK,oBAAsBJ,EAAQG,KAEjB,gBAAZE,SAIhBC,OAAOD,QAAUL,EAAQO,QAAQ,sBAEjCR,EAAK,4BAA8BC,EAAQG,WAE7CK,KAAM,SAAUL,GA0GhB,MAxGC,UAAUM,EAAQC,EAAUP,GACzB,YAwFA,SAASQ,GAAKC,GACNC,EAASD,EAAS,kBAClBA,EAAQE,UAAYF,EAAQE,UAAY,iBAIhD,QAASC,GAAKH,GACVA,EAAQI,SAGZ,QAASH,GAASD,EAASE,GACvB,OAAQ,IAAMF,EAAQK,aAAa,SAAW,KAAKC,QAAQ,IAAMJ,EAAY,MAAQ,EAjGzF,GAAIK,IACAC,UAAOC,GACPC,WAAY,WAGhBnB,GAASoB,QAAUpB,EAASoB,YAC5BpB,EAASoB,QAAQC,QAAU,SAAUC,GAGjC,MAFAA,GAAUtB,EAASuB,UAAWP,EAAgBM,GAEvC,SAAiBE,GAIpB,QAASC,GAAGC,EAAOC,GACfC,EAAOC,iBAAiBH,EAAO,SAASI,GACpCH,EAASG,KA6CjB,QAASC,GAAcC,GACnBC,EAAW1B,EAAS2B,cAAc,OAClCD,EAAStB,UAAcW,EAAQL,MAA8B,oBAAsBK,EAAQL,MAAnD,mBACxCW,EAAOO,aAAaF,EAAUT,EAAMY,UAAUC,WAAW,IACzDC,EAASL,EAASM,aAClBC,EAAQP,EAASQ,YAGrB,QAASC,GAAYhB,GACjB,GAAIO,EAAU,CACVK,EAASA,GAAUL,EAASM,aAC5BC,EAAQA,GAASP,EAASQ,WAC1B,IAAIE,IAAaH,EAAQ,EAAK,IAC1BI,GAAYN,EAAS,EAErBO,EAAMjB,EAAOkB,wBACbC,EAAOrB,EAAMsB,MAAQH,EAAIE,KACzBE,EAAMvB,EAAMwB,MAAQL,EAAII,GAE5BhB,GAASkB,MAAMF,IAAMA,EAAML,EAAU,KACrCX,EAASkB,MAAMJ,KAAOA,EAAOJ,EAAU,MAtE/C,GACIV,GAAUK,EAAQE,EADlBZ,EAASJ,EAAMY,SASnBX,GAAG,YAAa,SAASC,GACrB,GAAI0B,GAAS1B,EAAM2B,OACfC,EAAc,GAEdC,EAAc/B,YAAiBxB,GAASwD,IAAOJ,EAASA,EAAOK,WAC/DC,EAAa,EAAeN,EAAOK,WAAW3C,aAAa,YAAcsC,EAAOK,WAAW3C,aAAa,kBAAoB,GAC5H6C,EAAOP,EAAOtC,aAAa,YAAc4C,GAAc,GACvDE,EAAQR,EAAOtC,aAAa,YAC5B+C,IAAiBF,GAAQG,OAAOF,GAAS,CAEzCtC,GAAQyC,yBAAsE,kBAApCzC,GAAQyC,0BAClDH,EAAQtC,EAAQyC,wBAAwBH,IAGxCtC,EAAQ0C,YAA4C,kBAAvB1C,GAAQ0C,YAA6BH,EAClEP,EAAchC,EAAQ0C,WAAWL,EAAMC,GAChCC,IACPP,EAAc,wCAA0CK,EAAO,KAAOC,EAAQ,WAG9EN,IACAvB,EAAcuB,GACdrB,EAASgC,UAAYX,EACrBZ,EAAYhB,GACZlB,EAAKyB,GAELK,EAASL,EAASM,aAClBC,EAAQP,EAASQ,eAIzBhB,EAAG,WAAY,WACPQ,GACFrB,EAAKqB,KAIXR,EAAG,YAAa,SAASC,GACrBgB,EAAYhB,QA0CzBpB,OAAQC,SAAUP,GAEdA,EAASoB,QAAQC","file":"chartist-plugin-tooltip.min.js","sourcesContent":["(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([\"chartist-logscale\"], function (Chartist) {\n      return (root.returnExportsGlobal = factory(Chartist));\n    });\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like enviroments that support module.exports,\n    // like Node.\n    module.exports = factory(require(\"chartist-logscale\"));\n  } else {\n    root['Chartist.plugins.tooltip'] = factory(Chartist);\n  }\n}(this, function (Chartist) {\n\n  (function (window, document, Chartist) {\r\n      'use strict';\r\n\r\n      var defaultOptions = {\r\n          class: undefined,\r\n          pointClass: 'ct-point'\r\n      };\r\n\r\n      Chartist.plugins = Chartist.plugins || {};\r\n      Chartist.plugins.tooltip = function (options) {\r\n          options = Chartist.extend({}, defaultOptions, options);\r\n\r\n          return function tooltip(chart) {\r\n              var $chart = chart.container;\r\n              var $toolTip, height, width;\r\n\r\n              function on(event, callback) {\r\n                  $chart.addEventListener(event, function(e) {\r\n                      callback(e);\r\n                  });\r\n              }\r\n\r\n              on('mouseover', function(event) {\r\n                  var $point = event.target;\r\n                  var tooltipText = '';\r\n\r\n                  var isPieChart = (chart instanceof Chartist.Pie) ? $point : $point.parentNode;\r\n                  var seriesName = (isPieChart) ? $point.parentNode.getAttribute('ct:meta') || $point.parentNode.getAttribute('ct:series-name') : '';\r\n                  var meta = $point.getAttribute('ct:meta') || seriesName || '';\r\n                  var value = $point.getAttribute('ct:value');\r\n                  var hasMetaValue = !!meta && Number(value) > 0;\r\n\r\n                  if (options.transformTooltipTextFnc && typeof options.transformTooltipTextFnc === 'function') {\r\n                      value = options.transformTooltipTextFnc(value);\r\n                  }\r\n\r\n                  if (options.tooltipFnc && typeof options.tooltipFnc === 'function' && hasMetaValue) {\r\n                      tooltipText = options.tooltipFnc(meta, value);\r\n                  } else if (hasMetaValue) {\r\n                      tooltipText = '<span class=\"chartist-tooltip-value\">' + meta + ': ' + value + '</span>';\r\n                  }\r\n\r\n                  if (tooltipText) {\r\n                      renderTooltip(tooltipText);\r\n                      $toolTip.innerHTML = tooltipText;\r\n                      setPosition(event);\r\n                      show($toolTip);\r\n\r\n                      height = $toolTip.offsetHeight;\r\n                      width = $toolTip.offsetWidth;\r\n                  }\r\n              });\r\n\r\n              on('mouseout', function() {\r\n                  if ($toolTip) {\r\n                    hide($toolTip);\r\n                  }\r\n              });\r\n\r\n              on('mousemove', function(event) {\r\n                  setPosition(event);\r\n              });\r\n\r\n              function renderTooltip(text) {\r\n                  $toolTip = document.createElement('div');\r\n                  $toolTip.className = (!options.class) ? 'chartist-tooltip' : 'chartist-tooltip ' + options.class;\r\n                  $chart.insertBefore($toolTip, chart.container.childNodes[0]);\r\n                  height = $toolTip.offsetHeight;\r\n                  width = $toolTip.offsetWidth;\r\n              }\r\n\r\n              function setPosition(event) {\r\n                  if ($toolTip) {\r\n                      height = height || $toolTip.offsetHeight;\r\n                      width = width || $toolTip.offsetWidth;\r\n                      var offsetX = - (width / 2) * 1.1;\r\n                      var offsetY = - height - 8;\r\n\r\n                      var box = $chart.getBoundingClientRect();\r\n                      var left = event.pageX - box.left;\r\n                      var top = event.pageY - box.top;\r\n\r\n                      $toolTip.style.top = top + offsetY + 'px';\r\n                      $toolTip.style.left = left + offsetX + 'px';\r\n                  }\r\n              }\r\n          }\r\n      };\r\n\r\n      function show(element) {\r\n          if(!hasClass(element, 'tooltip-show')) {\r\n              element.className = element.className + ' tooltip-show';\r\n          }\r\n      }\r\n\r\n      function hide(element) {\r\n          element.remove();\r\n      }\r\n\r\n      function hasClass(element, className) {\r\n          return (' ' + element.getAttribute('class') + ' ').indexOf(' ' + className + ' ') > -1;\r\n      }\r\n  } (window, document, Chartist));\r\n\n  return Chartist.plugins.tooltip;\n\n}));\n"]}