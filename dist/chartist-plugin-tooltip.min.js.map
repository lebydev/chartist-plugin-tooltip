{"version":3,"sources":["chartist-plugin-tooltip.js"],"names":["root","factory","define","amd","Chartist","returnExportsGlobal","exports","module","require","this","window","document","removeElement","element","documentMode","removeNode","remove","defaultOptions","class","undefined","tooltipFnc","plugins","tooltip","options","extend","chart","on","event","callback","$chart","addEventListener","e","renderTooltip","text","x","y","$toolTip","createElement","className","innerHTML","setPosition","insertBefore","container","childNodes","height","offsetHeight","width","offsetWidth","offsetX","offsetY","box","getBoundingClientRect","left","top","style","querySelector","point","target","tooltipText","isPieChart","Pie","parentNode","seriesName","getAttribute","meta","value","hasMetaValue","Number","transformTooltipTextFnc","pageX","pageY","removeEventListener"],"mappings":";;;;;;CAAC,SAAUA,EAAMC,GACO,kBAAXC,SAAyBA,OAAOC,IAEzCD,QAAQ,qBAAsB,SAAUE,GACtC,MAAQJ,GAAKK,oBAAsBJ,EAAQG,KAEjB,gBAAZE,SAIhBC,OAAOD,QAAUL,EAAQO,QAAQ,sBAEjCR,EAAK,4BAA8BC,EAAQG,WAE7CK,KAAM,SAAUL,GAsGhB,MApGC,UAAUM,EAAQC,EAAUP,GACzB,YA2FA,SAASQ,GAAcC,GACbF,EAASG,aACXD,EAAQE,YAAW,GAEnBF,EAAQG,SA7FhB,GAAIC,IACAC,UAAOC,GACPC,eAAYD,GAGhBf,GAASiB,QAAUjB,EAASiB,YAC5BjB,EAASiB,QAAQC,QAAU,SAAUC,GAGjC,MAFAA,GAAUnB,EAASoB,UAAWP,EAAgBM,GAEvC,SAAiBE,GAKpB,QAASC,GAAGC,EAAOC,GACfC,EAAOC,iBAAiBH,EAAO,SAASI,GACpCH,EAASG,KAwCjB,QAASC,GAAcC,EAAMC,EAAGC,GAC5BC,EAAWzB,EAAS0B,cAAc,OAClCD,EAASE,UAAcf,EAAQL,MAA8B,mBAAqBK,EAAQL,MAAlD,mBACxCkB,EAASG,UAAYN,EACrBO,EAAYN,EAAGC,GACfN,EAAOY,aAAaL,EAAUX,EAAMiB,UAAUC,WAAW,IAEzDC,EAASR,EAASS,aAClBC,EAAQV,EAASW,YAGrB,QAASP,GAAYN,EAAGC,GACpB,GAAIC,EAAU,CACVQ,EAASA,GAAUR,EAASS,aAC5BC,EAAQA,GAASV,EAASW,WAC1B,IAAIC,IAAaF,EAAQ,EACrBG,GAAYL,EAAS,EAErBM,EAAMrB,EAAOsB,wBACbC,EAAOlB,EAAIgB,EAAIE,KACfC,EAAMlB,EAAIe,EAAIG,GAElBjB,GAASkB,MAAMD,IAAMA,EAAMJ,EAAU,KACrCb,EAASkB,MAAMF,KAAOA,EAAOJ,EAAU,MArE/C,GAEIJ,GAAQE,EAFRjB,EAASJ,EAAMiB,UACfN,EAAWzB,EAAS4C,cAAc,oBAStC7B,GAAG,YAAa,SAASC,GACjBS,GAAYxB,EAAcwB,EAC9B,IAAIoB,GAAQ7B,EAAM8B,OACdC,EAAc,GAEdC,EAAclC,YAAiBrB,GAASwD,IAAOJ,EAAQA,EAAMK,WAC7DC,EAAaH,EAAaH,EAAMK,WAAWE,aAAa,YAAcP,EAAMK,WAAWE,aAAa,kBAAoB,GACxHC,EAAOR,EAAMO,aAAa,YAAcD,GAAc,GACtDG,EAAQT,EAAMO,aAAa,YAC3BG,IAAiBF,GAAQG,OAAOF,GAAS,CAEzC1C,GAAQ6C,yBAAsE,kBAApC7C,GAAQ6C,0BAClDH,EAAQ1C,EAAQ6C,wBAAwBH,IAGxC1C,EAAQH,YAA4C,kBAAvBG,GAAQH,YAA6B8C,EAClER,EAAc,sCAAwCnC,EAAQH,WAAW4C,EAAMC,GAAS,UACjFC,IACPR,EAAc,wCAA0CM,EAAO,KAAOC,EAAQ,WAG9EP,GACA1B,EAAc0B,EAAa/B,EAAM0C,MAAO1C,EAAM2C,SAItD5C,EAAG,WAAY,WACPU,GACAxB,EAAcwB,KAItBV,EAAG,YAAa,SAASC,GACrBa,EAAYb,EAAM0C,MAAO1C,EAAM2C,SA8BnCzC,EAAO0C,oBAAoB,YAAa7C,GACxCG,EAAO0C,oBAAoB,YAAa7C,GACxCG,EAAO0C,oBAAoB,WAAY7C,MAWhDhB,OAAQC,SAAUP,GACdA,EAASiB,QAAQC","file":"chartist-plugin-tooltip.min.js","sourcesContent":["(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([\"chartist-logscale\"], function (Chartist) {\n      return (root.returnExportsGlobal = factory(Chartist));\n    });\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like enviroments that support module.exports,\n    // like Node.\n    module.exports = factory(require(\"chartist-logscale\"));\n  } else {\n    root['Chartist.plugins.tooltip'] = factory(Chartist);\n  }\n}(this, function (Chartist) {\n\n  (function (window, document, Chartist) {\r\n      'use strict';\r\n\r\n      var defaultOptions = {\r\n          class: undefined,\r\n          tooltipFnc: undefined\r\n      };\r\n\r\n      Chartist.plugins = Chartist.plugins || {};\r\n      Chartist.plugins.tooltip = function (options) {\r\n          options = Chartist.extend({}, defaultOptions, options);\r\n\r\n          return function tooltip(chart) {\r\n              var $chart = chart.container;\r\n              var $toolTip = document.querySelector('.chartist-tooltip');\r\n              var height, width;\r\n\r\n              function on(event, callback) {\r\n                  $chart.addEventListener(event, function(e) {\r\n                      callback(e);\r\n                  });\r\n              }\r\n\r\n              on('mouseover', function(event) {\r\n                  if ($toolTip) { removeElement($toolTip); }\r\n                  var point = event.target;\r\n                  var tooltipText = '';\r\n\r\n                  var isPieChart = (chart instanceof Chartist.Pie) ? point : point.parentNode;\r\n                  var seriesName = isPieChart ? point.parentNode.getAttribute('ct:meta') || point.parentNode.getAttribute('ct:series-name') : '';\r\n                  var meta = point.getAttribute('ct:meta') || seriesName || '';\r\n                  var value = point.getAttribute('ct:value');\r\n                  var hasMetaValue = !!meta && Number(value) > 0;\r\n\r\n                  if (options.transformTooltipTextFnc && typeof options.transformTooltipTextFnc === 'function') {\r\n                      value = options.transformTooltipTextFnc(value);\r\n                  }\r\n\r\n                  if (options.tooltipFnc && typeof options.tooltipFnc === 'function' && hasMetaValue) {\r\n                      tooltipText = '<span class=chartist-tooltip-value>' + options.tooltipFnc(meta, value) + '</span>';\r\n                  } else if (hasMetaValue) {\r\n                      tooltipText = '<span class=\"chartist-tooltip-value\">' + meta + ': ' + value + '</span>';\r\n                  }\r\n\r\n                  if (tooltipText) {\r\n                      renderTooltip(tooltipText, event.pageX, event.pageY);\r\n                  }\r\n              });\r\n\r\n              on('mouseout', function() {\r\n                  if ($toolTip) {\r\n                      removeElement($toolTip);\r\n                  }\r\n              });\r\n\r\n              on('mousemove', function(event) {\r\n                  setPosition(event.pageX, event.pageY);\r\n              });\r\n\r\n              function renderTooltip(text, x, y) {\r\n                  $toolTip = document.createElement('div');\r\n                  $toolTip.className = (!options.class) ? 'chartist-tooltip' : 'chartist-tooltip' + options.class;\r\n                  $toolTip.innerHTML = text;\r\n                  setPosition(x, y);\r\n                  $chart.insertBefore($toolTip, chart.container.childNodes[0]);\r\n\r\n                  height = $toolTip.offsetHeight;\r\n                  width = $toolTip.offsetWidth;\r\n              }\r\n\r\n              function setPosition(x, y) {\r\n                  if ($toolTip) {\r\n                      height = height || $toolTip.offsetHeight;\r\n                      width = width || $toolTip.offsetWidth;\r\n                      var offsetX = - (width / 2);\r\n                      var offsetY = - height - 8;\r\n\r\n                      var box = $chart.getBoundingClientRect();\r\n                      var left = x - box.left;\r\n                      var top = y - box.top;\r\n\r\n                      $toolTip.style.top = top + offsetY + 'px';\r\n                      $toolTip.style.left = left + offsetX + 'px';\r\n                  }\r\n              }\r\n\r\n              $chart.removeEventListener('mouseover', on);\r\n              $chart.removeEventListener('mousemove', on);\r\n              $chart.removeEventListener('mouseout', on);\r\n          };\r\n      };\r\n\r\n      function removeElement(element) {\r\n          if (!!document.documentMode) {\r\n              element.removeNode(true);\r\n          } else {\r\n              element.remove();\r\n          }\r\n      }\r\n  } (window, document, Chartist));\n  return Chartist.plugins.tooltip;\n\n}));\n"]}